{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":1,"numPassedTests":30,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":31,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1668828207056,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["BaseInput","props 확인","required 확인"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 required 확인 label 이 있고 required 가 true 이면 label 에 * 문자가 포함된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"label 이 있고 required 가 true 이면 label 에 * 문자가 포함된다."},{"ancestorTitles":["BaseInput","props 확인","label 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 label 확인 기본값은 빈문자열이다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"기본값은 빈문자열이다."},{"ancestorTitles":["BaseInput","props 확인","label 확인"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 label 확인 값이 셋팅되면 div.form-group tag 에 has-label class 가 설정된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"값이 셋팅되면 div.form-group tag 에 has-label class 가 설정된다."},{"ancestorTitles":["BaseInput","props 확인","label 확인"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 label 확인 slot:label 없을때 label 값의 유무에 따라 label 이 활성화되며 그 값이 label text 에 포함된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"slot:label 없을때 label 값의 유무에 따라 label 이 활성화되며 그 값이 label text 에 포함된다."},{"ancestorTitles":["BaseInput","props 확인","error 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 error 확인 기본값 확인 빈문자열","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"기본값 확인 빈문자열"},{"ancestorTitles":["BaseInput","props 확인","error 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 error 확인 error 값이 있을 경우에  has-danger class 활성화","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"error 값이 있을 경우에  has-danger class 활성화"},{"ancestorTitles":["BaseInput","props 확인","error 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 error 확인 slot name=error 가 없을경우 error 값이 있을경우 label.class 가 활성화 되며 label text 가 error 로 반영된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"slot name=error 가 없을경우 error 값이 있을경우 label.class 가 활성화 되며 label text 가 error 로 반영된다."},{"ancestorTitles":["BaseInput","props 확인","error 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 error 확인 기본값 확인","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"기본값 확인"},{"ancestorTitles":["BaseInput","props 확인","error 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 error 확인 기본값 확인","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"기본값 확인"},{"ancestorTitles":["BaseInput","props 확인","value 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 value 확인 초기값 확인 : 빈문자 열","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"초기값 확인 : 빈문자 열"},{"ancestorTitles":["BaseInput","props 확인","value 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 value 확인 value 값이 변경되면 input 의 value 에 값이 setting","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"value 값이 변경되면 input 의 value 에 값이 setting"},{"ancestorTitles":["BaseInput","props 확인","addonRightIcon 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 addonRightIcon 확인 기본값 확인 : 빈문자열","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"기본값 확인 : 빈문자열"},{"ancestorTitles":["BaseInput","props 확인","addonRightIcon 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 addonRightIcon 확인 slot name=addonRight 없을 때 addonRightIcon 값 에 따라. div.input-group-append tag 가 활성화 된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"slot name=addonRight 없을 때 addonRightIcon 값 에 따라. div.input-group-append tag 가 활성화 된다."},{"ancestorTitles":["BaseInput","props 확인","addonRightIcon 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 addonRightIcon 확인 addonRightIcon 값이 setting 되면 i 태그에 addonRightIcon 값이 class 로 셋팅된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"addonRightIcon 값이 setting 되면 i 태그에 addonRightIcon 값이 class 로 셋팅된다."},{"ancestorTitles":["BaseInput","props 확인","addonLeftIcon 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 addonLeftIcon 확인 기본값 확인 : 빈문자열","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"기본값 확인 : 빈문자열"},{"ancestorTitles":["BaseInput","props 확인","addonLeftIcon 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 addonLeftIcon 확인 slot name=addonLeft 없을 때 addonLeftIcon 값 에 따라. div.input-group-prepend tag 가 활성화 된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"slot name=addonLeft 없을 때 addonLeftIcon 값 에 따라. div.input-group-prepend tag 가 활성화 된다."},{"ancestorTitles":["BaseInput","props 확인","addonLeftIcon 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput props 확인 addonLeftIcon 확인 addonLeftIcon 값이 setting 되면 i 태그에 addonLeftIcon 값이 class 로 셋팅된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"addonLeftIcon 값이 setting 되면 i 태그에 addonLeftIcon 값이 class 로 셋팅된다."},{"ancestorTitles":["BaseInput","computed 확인","hasIcon"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasIcon computed hasLeftAddon 가 true 이면 true 를 반환","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"computed hasLeftAddon 가 true 이면 true 를 반환"},{"ancestorTitles":["BaseInput","computed 확인","hasIcon"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasIcon computed hasRightAddon 가 true 이면 true 를 반환","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"computed hasRightAddon 가 true 이면 true 를 반환"},{"ancestorTitles":["BaseInput","computed 확인","hasIcon"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasIcon computed hasLeftAddon,hasRightAddon  가 false 이면 false 를 반환","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"computed hasLeftAddon,hasRightAddon  가 false 이면 false 를 반환"},{"ancestorTitles":["BaseInput","computed 확인","hasRightAddon 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasRightAddon 확인 $slots.addonRight 과 addonRightIcon 값이 없으면 false 를 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"$slots.addonRight 과 addonRightIcon 값이 없으면 false 를 반환한다."},{"ancestorTitles":["BaseInput","computed 확인","hasRightAddon 확인"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasRightAddon 확인 $slots.addonRight 값이 있으면 true 를 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"$slots.addonRight 값이 있으면 true 를 반환한다."},{"ancestorTitles":["BaseInput","computed 확인","hasRightAddon 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasRightAddon 확인 addonRightIcon 값이 있으면 true 를 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"addonRightIcon 값이 있으면 true 를 반환한다."},{"ancestorTitles":["BaseInput","computed 확인","hasLeftAddon 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasLeftAddon 확인 $slots.addonLeft 과 addonLeftIcon 값이 없으면 false 를 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"$slots.addonLeft 과 addonLeftIcon 값이 없으면 false 를 반환한다."},{"ancestorTitles":["BaseInput","computed 확인","hasLeftAddon 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasLeftAddon 확인 $slots.addonLeft 값이 있으면 true 를 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"$slots.addonLeft 값이 있으면 true 를 반환한다."},{"ancestorTitles":["BaseInput","computed 확인","hasLeftAddon 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 hasLeftAddon 확인 addonLeftIcon 값이 있으면 true 를 반환한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"addonLeftIcon 값이 있으면 true 를 반환한다."},{"ancestorTitles":["BaseInput","computed 확인","listeners 확인"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput computed 확인 listeners 확인 listeners 는 상속받은 $listeners 객체와 input, blur, focus 만 재정의한다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"listeners 는 상속받은 $listeners 객체와 input, blur, focus 만 재정의한다."},{"ancestorTitles":["BaseInput","methods 확인","onInput() 확인"],"duration":2,"failureDetails":[{"matcherResult":{"actual":"test","expected":"test1","message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"test\u001b[7m1\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"test\"\u001b[39m","name":"toEqual","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"test\u001b[7m1\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"test\"\u001b[39m\n    at Object.toEqual (/Users/jeonghun/nuxt/nuxt2-setting/src/__tests__/Inputs/BaseInput.spec.js:325:47)\n    at Promise.then.completed (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/utils.js:289:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/utils.js:222:10)\n    at _callCircusTest (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:248:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:184:3)\n    at _runTestsForDescribeBlock (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:86:9)\n    at _runTestsForDescribeBlock (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:81:9)\n    at _runTestsForDescribeBlock (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:81:9)\n    at _runTestsForDescribeBlock (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:81:9)\n    at run (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/run.js:26:3)\n    at runAndTransformResultsToJestFormat (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:120:21)\n    at jestAdapter (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeonghun/nuxt/nuxt2-setting/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"BaseInput methods 확인 onInput() 확인 onInput 메서드가 호출되면 input emit 이 호출된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"onInput 메서드가 호출되면 input emit 이 호출된다."},{"ancestorTitles":["BaseInput","methods 확인","onFocus() 확인"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput methods 확인 onFocus() 확인 onFocus 메서드가 호출되면 focus emit 이 호출된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"onFocus 메서드가 호출되면 focus emit 이 호출된다."},{"ancestorTitles":["BaseInput","methods 확인","onBlur() 확인"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BaseInput methods 확인 onBlur() 확인 onBlur 메서드가 호출되면 blur emit 이 호출된다.","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"onBlur 메서드가 호출되면 blur emit 이 호출된다."}],"endTime":1668828207611,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mBaseInput › methods 확인 › onInput() 확인 › onInput 메서드가 호출되면 input emit 이 호출된다.\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"test\u001b[7m1\u001b[27m\"\u001b[39m\n    Received: \u001b[31m\"test\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 323 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 324 |\u001b[39m         \u001b[90m// then\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 325 |\u001b[39m         expect(wrapper\u001b[33m.\u001b[39memitted()\u001b[33m.\u001b[39minput[\u001b[35m0\u001b[39m][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual(\u001b[32m'test1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 326 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 327 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 328 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/Inputs/BaseInput.spec.js\u001b[39m\u001b[0m\u001b[2m:325:47)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jeonghun/nuxt/nuxt2-setting/src/__tests__/Inputs/BaseInput.spec.js","startTime":1668828207274,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["NuxtLogo"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NuxtLogo is a Vue instance","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"is a Vue instance"}],"endTime":1668828207697,"message":"","name":"/Users/jeonghun/nuxt/nuxt2-setting/test/NuxtLogo.spec.js","startTime":1668828207620,"status":"passed","summary":""}],"wasInterrupted":false,"coverageMap":{"/Users/jeonghun/nuxt/nuxt2-setting/src/components/Inputs/BaseInput.vue":{"path":"/Users/jeonghun/nuxt/nuxt2-setting/src/components/Inputs/BaseInput.vue","statementMap":{"0":{"start":{"line":44,"column":0},"end":{"line":153,"column":null}},"1":{"start":{"line":153,"column":0},"end":{"line":153,"column":null}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{}},"/Users/jeonghun/nuxt/nuxt2-setting/src/pages/index.vue":{"path":"/Users/jeonghun/nuxt/nuxt2-setting/src/pages/index.vue","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":8,"column":null}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":null}}},"fnMap":{},"branchMap":{},"s":{"0":0,"1":0},"f":{},"b":{}},"/Users/jeonghun/nuxt/nuxt2-setting/src/components/Tutorial.vue":{"path":"/Users/jeonghun/nuxt/nuxt2-setting/src/components/Tutorial.vue","statementMap":{"0":{"start":{"line":93,"column":0},"end":{"line":97,"column":null}},"1":{"start":{"line":97,"column":0},"end":{"line":97,"column":null}}},"fnMap":{},"branchMap":{},"s":{"0":0,"1":0},"f":{},"b":{}}}}